name: Build PyQt App Installer

on:
  push:
    branches:
      - main  # 只在 main 分支推送时触发

jobs:
  build:
    strategy:
      matrix:
        os: [windows-latest, macos-latest]  # 同时支持 Windows 和 macOS
        include:
          - os: windows-latest
            output_name: MyApp-Windows
            artifact_ext: .exe
          - os: macos-latest
            output_name: MyApp-macOS
            artifact_ext: .app
    
    runs-on: ${{ matrix.os }}

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'

    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Install Inno Setup (Windows only)
      if: matrix.os == 'windows-latest'
      run: |
        Invoke-WebRequest -Uri "https://jrsoftware.org/download.php/is.exe" -OutFile "is.exe"
        Start-Process .\is.exe /VERYSILENT -Wait

    - name: 获取当前时间生成版本号
      id: version
      shell: bash  # 使用bash以确保跨平台兼容
      run: |
        VERSION=$(date +'%Y%m%d-%H%M%S')
        echo "VERSION=$VERSION" >> $GITHUB_ENV

    - name: 使用 PyInstaller 构建应用 (Windows)
      if: matrix.os == 'windows-latest'
      run: |
        python -m PyInstaller --name ${{ matrix.output_name }}-${{ env.VERSION }} --onefile --noconsole --icon=resources\app.ico main.py

    - name: 使用 PyInstaller 构建应用 (macOS)
      if: matrix.os == 'macos-latest'
      run: |
        # 为macOS创建.app包
        python -m PyInstaller --name ${{ matrix.output_name }}-${{ env.VERSION }} --windowed --icon=resources/app.ico main.py
        # 创建DMG文件
        brew install create-dmg
        create-dmg \
          --volname "${{ matrix.output_name }}-${{ env.VERSION }}" \
          --window-pos 200 120 \
          --window-size 800 400 \
          --icon-size 100 \
          --icon "${{ matrix.output_name }}-${{ env.VERSION }}.app" 200 190 \
          --hide-extension "${{ matrix.output_name }}-${{ env.VERSION }}.app" \
          --app-drop-link 600 185 \
          "dist/${{ matrix.output_name }}-${{ env.VERSION }}.dmg" \
          "dist/${{ matrix.output_name }}-${{ env.VERSION }}.app"

    - name: 使用 Inno Setup 构建安装包 (Windows only)
      if: matrix.os == 'windows-latest'
      run: |
        (Get-Content installer.iss) -replace 'MyApp', "${{ matrix.output_name }}-${{ env.VERSION }}" | Set-Content installer.iss
        & "C:\Program Files (x86)\Inno Setup 6\ISCC.exe" installer.iss

    - name: 上传构建产物到 GitHub Release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: v${{ env.VERSION }}
        files: |
          ${{ matrix.os == 'windows-latest' && format('dist/{0}-{1}.exe', matrix.output_name, env.VERSION) || format('dist/{0}-{1}.dmg', matrix.output_name, env.VERSION) }}
          ${{ matrix.os == 'windows-latest' && 'output/HelloPyQtInstaller.exe' || '' }}
        prerelease: true
      env:
        GITHUB_TOKEN: ${{ secrets.GH_PAT }}
