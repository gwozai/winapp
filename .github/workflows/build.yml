name: Build PyQt App Installer

on:
  push:
    branches:
      - main  # 只在 main 分支推送时触发

jobs:
  build:
    runs-on: windows-latest  # 使用最新的 Windows 环境

    steps:
    - name: Checkout code
      uses: actions/checkout@v3  # 获取代码

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'  # 设置 Python 版本为 3.10

    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip  # 更新 pip
        pip install -r requirements.txt  # 安装依赖

    - name: Install Inno Setup
      run: |
        Invoke-WebRequest -Uri "https://jrsoftware.org/download.php/is.exe" -OutFile "is.exe"  # 下载 Inno Setup
        Start-Process .\is.exe /VERYSILENT -Wait  # 安静安装 Inno Setup

    - name: 获取当前时间生成版本号
      id: version
      run: |
        # 使用当前时间戳生成版本号，格式：vYYYYMMDD-HHMMSS
        $version = (Get-Date).ToString('yyyyMMdd-HHmmss')
        Write-Host "VERSION=$version"  # 输出版本号，用于后续步骤
        echo "VERSION=$version" >> $env:GITHUB_ENV  # 将版本号存入环境变量

    - name: 使用 PyInstaller 构建应用
      run: |
        # 使用生成的版本号来命名构建的应用
        python -m PyInstaller --name MyApp-${{ env.VERSION }} --onefile --noconsole --icon=resources\app.ico main.py

    - name: 使用 Inno Setup 构建安装包
      run: |
        # 更新 Inno Setup 脚本中的应用名为带版本号的形式
        (Get-Content installer.iss) -replace 'MyApp', "MyApp-${{ env.VERSION }}" | Set-Content installer.iss
        & "C:\Program Files (x86)\Inno Setup 6\ISCC.exe" installer.iss  # 使用 Inno Setup 生成安装包1

    - name: 上传安装包到 GitHub Release
      uses: softprops/action-gh-release@v1
      with:
        # 使用生成的版本号作为 GitHub Release 的标签
        tag_name: v${{ env.VERSION }}
        # 上传生成的安装包，文件名带版本号，尝试多个目录
        files: |
          dist/MyApp-${{ env.VERSION }}.exe
          output/MyApp-${{ env.VERSION }}.exe
          build/MyApp-${{ env.VERSION }}.exe
        prerelease: true  # 标记为预发布版本
      env:
        GITHUB_TOKEN: ${{ secrets.GH_PAT }}  # 使用 GitHub Personal Access Token 进行认证


    - name: 上传安装包到 GitHub Release
      uses: softprops/action-gh-release@v1
      with:
        # 使用生成的版本号作为 GitHub Release 的标签
        tag_name: v${{ env.VERSION }}
        # 上传生成的安装包，文件名带版本号，尝试多个目录
        files: |
          dist/MyApp-${{ env.VERSION }}.exe
          output/MyApp-${{ env.VERSION }}.exe
          build/MyApp-${{ env.VERSION }}.exe
        prerelease: true  # 标记为预发布版本
      env:
        GITHUB_TOKEN: ${{ secrets.GH_PAT }}  # 使用 GitHub Personal Access Token 进行认证
  